{
    "files.associations": {
        "*.kit": "toml",
    },
    "editor.rulers": [120],

    // Python modules search paths:
    "python.analysis.extraPaths": [
        "${workspaceFolder}/source/extensions/omni.ext.mobility_gen",
        "${workspaceFolder}/app/kit/exts/omni.kit.pip_archive/pip_prebundle",
        "${workspaceFolder}/app/kit/kernel/py",
        "${workspaceFolder}/app/kit/plugins/bindings-python",
        "${workspaceFolder}/app/extsPhysics/omni.physx.supportui",
        "${workspaceFolder}/app/extsPhysics/omni.physx",
        "${workspaceFolder}/app/extsPhysics/omni.usd.schema.forcefield",
        "${workspaceFolder}/app/extsPhysics/omni.physx.internal",
        "${workspaceFolder}/app/extsPhysics/omni.physx.tests",
        "${workspaceFolder}/app/extsPhysics/omni.physx.vehicle.tests",
        "${workspaceFolder}/app/extsPhysics/omni.physics.tensors.tests",
        "${workspaceFolder}/app/extsPhysics/omni.physx.cct",
        "${workspaceFolder}/app/extsPhysics/omni.physx.graph",
        "${workspaceFolder}/app/extsPhysics/omni.localcache",
        "${workspaceFolder}/app/extsPhysics/omni.physx.commands",
        "${workspaceFolder}/app/extsPhysics/omni.physx.demos",
        "${workspaceFolder}/app/extsPhysics/omni.physx.tests.visual",
        "${workspaceFolder}/app/extsPhysics/omni.usdphysics.ui",
        "${workspaceFolder}/app/extsPhysics/omni.physx.pvd",
        "${workspaceFolder}/app/extsPhysics/omni.usd.schema.physx",
        "${workspaceFolder}/app/extsPhysics/omni.convexdecomposition",
        "${workspaceFolder}/app/extsPhysics/omni.physx.stageupdate",
        "${workspaceFolder}/app/extsPhysics/omni.physics.tensors",
        "${workspaceFolder}/app/extsPhysics/omni.physx.tests.mini",
        "${workspaceFolder}/app/extsPhysics/omni.physx.camera",
        "${workspaceFolder}/app/extsPhysics/omni.kit.property.physx",
        "${workspaceFolder}/app/extsPhysics/omni.physx.foundation",
        "${workspaceFolder}/app/extsPhysics/omni.usdphysics.tests",
        "${workspaceFolder}/app/extsPhysics/omni.physx.ui",
        "${workspaceFolder}/app/extsPhysics/omni.physx.bundle",
        "${workspaceFolder}/app/extsPhysics/omni.physx.tensors",
        "${workspaceFolder}/app/extsPhysics/omni.kvdb",
        "${workspaceFolder}/app/extsPhysics/omni.usdphysics",
        "${workspaceFolder}/app/extsPhysics/omni.physx.vehicle",
        "${workspaceFolder}/app/extsPhysics/omni.physx.zerogravity",
        "${workspaceFolder}/app/extsPhysics/omni.physx.forcefields",
        "${workspaceFolder}/app/extsPhysics/omni.physx.telemetry",
        "${workspaceFolder}/app/extsPhysics/omni.physx.fabric",
        "${workspaceFolder}/app/extsPhysics/omni.physx.cooking",
        "${workspaceFolder}/app/exts/omni.isaac.robot_assembler",
        "${workspaceFolder}/app/exts/omni.isaac.conveyor.ui",
        "${workspaceFolder}/app/exts/omni.isaac.ml_archive",
        "${workspaceFolder}/app/exts/omni.isaac.throttling",
        "${workspaceFolder}/app/exts/omni.isaac.window.about",
        "${workspaceFolder}/app/exts/omni.isaac.vscode",
        "${workspaceFolder}/app/exts/omni.isaac.debug_draw",
        "${workspaceFolder}/app/exts/omni.isaac.wheeled_robots.ui",
        "${workspaceFolder}/app/exts/omni.isaac.ros_bridge",
        "${workspaceFolder}/app/exts/omni.isaac.import_wizard",
        "${workspaceFolder}/app/exts/omni.isaac.manipulators",
        "${workspaceFolder}/app/exts/omni.isaac.manipulators.ui",
        "${workspaceFolder}/app/exts/omni.isaac.asset_browser",
        "${workspaceFolder}/app/exts/omni.isaac.articulation_inspector",
        "${workspaceFolder}/app/exts/omni.usd.schema.isaac",
        "${workspaceFolder}/app/exts/omni.isaac.robot_description_editor",
        "${workspaceFolder}/app/exts/omni.isaac.range_sensor.examples",
        "${workspaceFolder}/app/exts/omni.isaac.lula_test_widget",
        "${workspaceFolder}/app/exts/omni.isaac.jupyter_notebook",
        "${workspaceFolder}/app/exts/omni.isaac.motion_generation",
        "${workspaceFolder}/app/exts/omni.isaac.tf_viewer",
        "${workspaceFolder}/app/exts/omni.isaac.synthetic_recorder",
        "${workspaceFolder}/app/exts/omni.isaac.utils",
        "${workspaceFolder}/app/exts/omni.isaac.proximity_sensor",
        "${workspaceFolder}/app/exts/omni.pip.cloud",
        "${workspaceFolder}/app/exts/omni.isaac.dynamic_control",
        "${workspaceFolder}/app/exts/omni.isaac.doctest",
        "${workspaceFolder}/app/exts/omni.replicator.isaac",
        "${workspaceFolder}/app/exts/omni.isaac.gain_tuner",
        "${workspaceFolder}/app/exts/omni.isaac.sensor",
        "${workspaceFolder}/app/exts/omni.isaac.surface_gripper.ui",
        "${workspaceFolder}/app/exts/omni.kit.property.isaac",
        "${workspaceFolder}/app/exts/omni.isaac.core_archive",
        "${workspaceFolder}/app/exts/omni.isaac.ui",
        "${workspaceFolder}/app/exts/omni.isaac.kit",
        "${workspaceFolder}/app/exts/omni.isaac.physics_inspector",
        "${workspaceFolder}/app/exts/omni.isaac.benchmark.services",
        "${workspaceFolder}/app/exts/omni.isaac.common_includes",
        "${workspaceFolder}/app/exts/omni.isaac.occupancy_map.ui",
        "${workspaceFolder}/app/exts/omni.isaac.physics_utilities",
        "${workspaceFolder}/app/exts/omni.isaac.universal_robots",
        "${workspaceFolder}/app/exts/omni.isaac.cortex.sample_behaviors",
        "${workspaceFolder}/app/exts/omni.isaac.cortex",
        "${workspaceFolder}/app/exts/omni.isaac.range_sensor.ui",
        "${workspaceFolder}/app/exts/omni.isaac.version",
        "${workspaceFolder}/app/exts/omni.isaac.lula",
        "${workspaceFolder}/app/exts/omni.isaac.core",
        "${workspaceFolder}/app/exts/omni.isaac.block_world",
        "${workspaceFolder}/app/exts/omni.exporter.urdf",
        "${workspaceFolder}/app/exts/omni.isaac.core_nodes",
        "${workspaceFolder}/app/exts/omni.isaac.quadruped",
        "${workspaceFolder}/app/exts/omni.isaac.ros2_bridge",
        "${workspaceFolder}/app/exts/omni.isaac.scene_blox",
        "${workspaceFolder}/app/exts/omni.isaac.app.selector",
        "${workspaceFolder}/app/exts/omni.isaac.wheeled_robots",
        "${workspaceFolder}/app/exts/omni.isaac.range_sensor",
        "${workspaceFolder}/app/exts/omni.isaac.conveyor",
        "${workspaceFolder}/app/exts/omni.isaac.extension_templates",
        "${workspaceFolder}/app/exts/omni.isaac.cloner",
        "${workspaceFolder}/app/exts/omni.isaac.examples_nodes",
        "${workspaceFolder}/app/exts/omni.isaac.franka",
        "${workspaceFolder}/app/exts/omni.isaac.nucleus",
        "${workspaceFolder}/app/exts/omni.isaac.ui_template",
        "${workspaceFolder}/app/exts/omni.isaac.examples",
        "${workspaceFolder}/app/exts/omni.isaac.benchmarks",
        "${workspaceFolder}/app/exts/omni.kit.loop-isaac",
        "${workspaceFolder}/app/exts/omni.isaac.surface_gripper",
        "${workspaceFolder}/app/exts/omni.isaac.app.setup",
        "${workspaceFolder}/app/exts/omni.isaac.ocs2",
        "${workspaceFolder}/app/exts/omni.isaac.assets_check",
        "${workspaceFolder}/app/exts/omni.isaac.tests",
        "${workspaceFolder}/app/exts/omni.pip.compute",
        "${workspaceFolder}/app/exts/omni.isaac.grasp_editor",
        "${workspaceFolder}/app/exts/omni.isaac.menu",
        "${workspaceFolder}/app/exts/omni.isaac.ros2_bridge.robot_description",
        "${workspaceFolder}/app/exts/omni.isaac.cortex_sync",
        "${workspaceFolder}/app/exts/omni.isaac.camera_inspector",
        "${workspaceFolder}/app/exts/omni.isaac.merge_mesh",
        "${workspaceFolder}/app/exts/omni.isaac.repl",
        "${workspaceFolder}/app/exts/omni.isaac.occupancy_map",
        "${workspaceFolder}/app/kit/extscore/omni.assets.plugins",
        "${workspaceFolder}/app/kit/extscore/omni.kit.registry.nucleus",
        "${workspaceFolder}/app/kit/extscore/omni.kit.async_engine",
        "${workspaceFolder}/app/kit/extscore/omni.client",
    ],

    // Python & Pylance Setup
    "python.languageServer": "Pylance",
    "python.pythonPath": "${workspaceFolder}/app/kit/python/bin/python3",
    "python.defaultInterpreterPath": "${workspaceFolder}/app/kit/python/bin/python3",

    // We use "black" as a formatter:
    "python.formatting.provider": "black",
    "python.formatting.blackArgs": ["--line-length", "120"],

    // Use flake8 for linting
    "python.linting.enabled": true,
    "python.linting.pylintEnabled": false,
    "python.linting.flake8Enabled": true,
    "python.linting.flake8Args": ["--max-line-length=120"]
}
